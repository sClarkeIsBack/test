exec("import re;import base64");exec(base64.b64decode('IyMjIyMjIyMjIyMjI0ltcG9ydHMjIyMjIyMjIyMjIyMjDQppbXBvcnQgeGJtYyx4Ym1jYWRkb24seGJtY2d1aSx4Ym1jcGx1Z2luLGJhc2U2NCxvcyxyZSxyZXF1ZXN0cyxzdHJpbmcsc3lzLHVybGxpYixqc29uLHVybHBhcnNlLGRhdGV0aW1lLHppcGZpbGUsc2h1dGlsDQpmcm9tIHJlc291cmNlcy5tb2R1bGVzIGltcG9ydCBjbGllbnQsY29udHJvbCx0b29scw0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQoNCiMjIyMjIyMjIyMjIyNEZWZpbmVkIFN0cmluZ3MjIyMjIyMjIyMjIyMjDQphZGRvbl9pZCAgICAgPSAncGx1Z2luLnZpZGVvLk1lZGlhSHViSVBUVicNCnNlbGZBZGRvbiAgICA9IHhibWNhZGRvbi5BZGRvbihpZD1hZGRvbl9pZCkNCmljb24gICAgICAgICA9IHhibWMudHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL2FkZG9ucy8nICsgYWRkb25faWQsICdpY29uLnBuZycpKQ0KZmFuYXJ0ICAgICAgID0geGJtYy50cmFuc2xhdGVQYXRoKG9zLnBhdGguam9pbignc3BlY2lhbDovL2hvbWUvYWRkb25zLycgKyBhZGRvbl9pZCAsICdmYW5hcnQuanBnJykpDQoNCnVzZXJuYW1lICAgICA9IGNvbnRyb2wuc2V0dGluZygnVXNlcm5hbWUnKQ0KcGFzc3dvcmQgICAgID0gY29udHJvbC5zZXR0aW5nKCdQYXNzd29yZCcpDQoNCmhvc3QgICAgICAgICA9ICdodHRwOi8vbWVkaWFodWJpcHR2LmRkbnMubmV0Jw0KcG9ydCAgICAgICAgID0gJzQ1NDUnDQoNCmxpdmVfdXJsICAgICA9ICclczolcy9lbmlnbWEyLnBocD91c2VybmFtZT0lcyZwYXNzd29yZD0lcyZ0eXBlPWdldF9saXZlX2NhdGVnb3JpZXMnJShob3N0LHBvcnQsdXNlcm5hbWUscGFzc3dvcmQpDQp2b2RfdXJsICAgICAgPSAnJXM6JXMvZW5pZ21hMi5waHA/dXNlcm5hbWU9JXMmcGFzc3dvcmQ9JXMmdHlwZT1nZXRfdm9kX2NhdGVnb3JpZXMnJShob3N0LHBvcnQsdXNlcm5hbWUscGFzc3dvcmQpDQpwYW5lbF9hcGkgICAgPSAnJXM6JXMvcGFuZWxfYXBpLnBocD91c2VybmFtZT0lcyZwYXNzd29yZD0lcyclKGhvc3QscG9ydCx1c2VybmFtZSxwYXNzd29yZCkNCnBsYXlfdXJsICAgICA9ICclczolcy9saXZlLyVzLyVzLyclKGhvc3QscG9ydCx1c2VybmFtZSxwYXNzd29yZCkNCg0KYWR2YW5jZWRfc2V0dGluZ3MgICAgICAgICAgID0gIHhibWMudHJhbnNsYXRlUGF0aCgnc3BlY2lhbDovL2hvbWUvYWRkb25zLycrYWRkb25faWQrJy9yZXNvdXJjZXMvYWR2YW5jZWRfc2V0dGluZ3MnKQ0KYWR2YW5jZWRfc2V0dGluZ3NfdGFyZ2V0ICAgID0gIHhibWMudHJhbnNsYXRlUGF0aChvcy5wYXRoLmpvaW4oJ3NwZWNpYWw6Ly9ob21lL3VzZXJkYXRhJywnYWR2YW5jZWRzZXR0aW5ncy54bWwnKSkNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQoNCg0KZGVmIHN0YXJ0KCk6DQoJaWYgdXNlcm5hbWU9PSIiOg0KCQl1c2VyID0gdXNlcnBvcHVwKCkNCgkJcGFzc3c9IHBhc3Nwb3B1cCgpDQoJCWNvbnRyb2wuc2V0U2V0dGluZygnVXNlcm5hbWUnLHVzZXIpDQoJCWNvbnRyb2wuc2V0U2V0dGluZygnUGFzc3dvcmQnLHBhc3N3KQ0KCQl4Ym1jLmV4ZWN1dGVidWlsdGluKCdDb250YWluZXIuUmVmcmVzaCcpDQoJCWF1dGggPSAnJXM6JXMvZW5pZ21hMi5waHA/dXNlcm5hbWU9JXMmcGFzc3dvcmQ9JXMmdHlwZT1nZXRfdm9kX2NhdGVnb3JpZXMnJShob3N0LHBvcnQsdXNlcixwYXNzdykNCgkJYXV0aCA9IHRvb2xzLk9QRU5fVVJMKGF1dGgpDQoJCWlmIGF1dGggPT0gIiI6DQoJCQlsaW5lMSA9ICJJbmNvcnJlY3QgTG9naW4gRGV0YWlscyINCgkJCWxpbmUyID0gIlBsZWFzZSBSZS1lbnRlciIgDQoJCQlsaW5lMyA9ICIiIA0KCQkJeGJtY2d1aS5EaWFsb2coKS5vaygnQXR0ZW50aW9uJywgbGluZTEsIGxpbmUyLCBsaW5lMykNCgkJCXN0YXJ0KCkNCgkJZWxzZToNCgkJCWxpbmUxID0gIkxvZ2luIFN1Y3Nlc3NmdWxsIg0KCQkJbGluZTIgPSAiV2VsY29tZSB0byBNZWRpYUh1YiBJUFRWIiANCgkJCWxpbmUzID0gKCdbQ09MT1IgYmx1ZV0lc1svQ09MT1JdJyV1c2VyKQ0KCQkJeGJtY2d1aS5EaWFsb2coKS5vaygnTWVkaWFIdWIgSVBUVicsIGxpbmUxLCBsaW5lMiwgbGluZTMpDQoJCQlwdnJzZXR1cCgpDQoJCQlhc2V0dGluZ3MoKQ0KCQkJeGJtYy5leGVjdXRlYnVpbHRpbignQ29udGFpbmVyLlJlZnJlc2gnKQ0KCQkJaG9tZSgpDQoJZWxzZToNCgkJYXV0aCA9ICclczolcy9lbmlnbWEyLnBocD91c2VybmFtZT0lcyZwYXNzd29yZD0lcyZ0eXBlPWdldF92b2RfY2F0ZWdvcmllcyclKGhvc3QscG9ydCx1c2VybmFtZSxwYXNzd29yZCkNCgkJYXV0aCA9IHRvb2xzLk9QRU5fVVJMKGF1dGgpDQoJCWlmIG5vdCBhdXRoPT0iIjoNCgkJCXRvb2xzLmFkZERpcignQWNjb3VudCBJbmZvcm1hdGlvbicsJ3VybCcsNixpY29uLGZhbmFydCwnJykNCgkJCXRvb2xzLmFkZERpcignTGl2ZSBJUFRWJywnbGl2ZScsMSxpY29uLGZhbmFydCwnJykNCgkJCWlmIHhibWMuZ2V0Q29uZFZpc2liaWxpdHkoJ1N5c3RlbS5IYXNBZGRvbihwdnIuaXB0dnNpbXBsZSknKToNCgkJCQl0b29scy5hZGREaXIoJ1RWIEd1aWRlJywncHZyJyw3LGljb24sZmFuYXJ0LCcnKQ0KCQkJdG9vbHMuYWRkRGlyKCdWT0QnLCd2b2QnLDMsaWNvbixmYW5hcnQsJycpDQoJCQl0b29scy5hZGREaXIoJ1NlYXJjaCcsJ3VybCcsNSxpY29uLGZhbmFydCwnJykNCgkJCXRvb2xzLmFkZERpcignU2V0dGluZ3MnLCd1cmwnLDgsaWNvbixmYW5hcnQsJycpDQoJCQkNCmRlZiBob21lKCk6DQoJdG9vbHMuYWRkRGlyKCdBY2NvdW50IEluZm9ybWF0aW9uJywndXJsJyw2LGljb24sZmFuYXJ0LCcnKQ0KCXRvb2xzLmFkZERpcignTGl2ZSBJUFRWJywnbGl2ZScsMSxpY29uLGZhbmFydCwnJykNCglpZiB4Ym1jLmdldENvbmRWaXNpYmlsaXR5KCdTeXN0ZW0uSGFzQWRkb24ocHZyLmlwdHZzaW1wbGUpJyk6DQoJCXRvb2xzLmFkZERpcignVFYgR3VpZGUnLCdwdnInLDcsaWNvbixmYW5hcnQsJycpDQoJdG9vbHMuYWRkRGlyKCdWT0QnLCd2b2QnLDMsaWNvbixmYW5hcnQsJycpDQoJdG9vbHMuYWRkRGlyKCdTZWFyY2gnLCcnLDUsaWNvbixmYW5hcnQsJycp'));exec(base64.b64decode(''));exec(base64.b64decode('CQ0KDQpkZWYgbW9yZXRoYW4oKToNCgkJZmlsZSA9IG9wZW4ob3MucGF0aC5qb2luKGFkdmFuY2VkX3NldHRpbmdzLCAnbW9yZXRoYW4ueG1sJykpDQoJCWEgPSBmaWxlLnJlYWQoKQ0KCQlmID0gb3BlbihhZHZhbmNlZF9zZXR0aW5nc190YXJnZXQsIG1vZGU9J3crJykNCgkJZi53cml0ZShhKQ0KCQlmLmNsb3NlKCkNCg0KCQkNCmRlZiBsZXNzdGhhbigpOg0KCQlmaWxlID0gb3Blbihvcy5wYXRoLmpvaW4oYWR2YW5jZWRfc2V0dGluZ3MsICdsZXNzdGhhbi54bWwnKSkNCgkJYSA9IGZpbGUucmVhZCgpDQoJCWYgPSBvcGVuKGFkdmFuY2VkX3NldHRpbmdzX3RhcmdldCwgbW9kZT0ndysnKQ0KCQlmLndyaXRlKGEpDQoJCWYuY2xvc2UoKQ0KCQkNCgkJDQpkZWYgdXNlcnBvcHVwKCk6DQoJa2IgPXhibWMuS2V5Ym9hcmQgKCcnLCAnaGVhZGluZycsIFRydWUpDQoJa2Iuc2V0SGVhZGluZygnRW50ZXIgVXNlcm5hbWUnKQ0KCWtiLnNldEhpZGRlbklucHV0KEZhbHNlKQ0KCWtiLmRvTW9kYWwoKQ0KCWlmIChrYi5pc0NvbmZpcm1lZCgpKToNCgkJdGV4dCA9IGtiLmdldFRleHQoKQ0KCQlyZXR1cm4gdGV4dA0KCWVsc2U6DQoJCXJldHVybiBGYWxzZQ0KDQoJCQ0KZGVmIHBhc3Nwb3B1cCgpOg0KCWtiID14Ym1jLktleWJvYXJkICgnJywgJ2hlYWRpbmcnLCBUcnVlKQ0KCWtiLnNldEhlYWRpbmcoJ0VudGVyIFBhc3N3b3JkJykNCglrYi5zZXRIaWRkZW5JbnB1dChGYWxzZSkNCglrYi5kb01vZGFsKCkNCglpZiAoa2IuaXNDb25maXJtZWQoKSk6DQoJCXRleHQgPSBrYi5nZXRUZXh0KCkNCgkJcmV0dXJuIHRleHQNCgllbHNlOg0KCQlyZXR1cm4gRmFsc2UNCgkJDQoJCQ0KZGVmIGFjY291bnRpbmZvKCk6DQoJb3BlbiA9IHRvb2xzLk9QRU5fVVJMKHBhbmVsX2FwaSkNCgl0cnk6DQoJCXVzZXJuYW1lICA9IHRvb2xzLnJlZ2V4X2Zyb21fdG8ob3BlbiwnInVzZXJuYW1lIjoiJywnIicpDQoJCXBhc3N3b3JkICA9IHRvb2xzLnJlZ2V4X2Zyb21fdG8ob3BlbiwnInBhc3N3b3JkIjoiJywnIicpDQoJCXN0YXR1cyAgICA9IHRvb2xzLnJlZ2V4X2Zyb21fdG8ob3BlbiwnInN0YXR1cyI6IicsJyInKQ0KCQljb25uZWN0cyAgPSB0b29scy5yZWdleF9mcm9tX3RvKG9wZW4sJyJtYXhfY29ubmVjdGlvbnMiOiInLCciJykNCgkJZXhwaXJ5ICAgID0gdG9vbHMucmVnZXhfZnJvbV90byhvcGVuLCciZXhwX2RhdGUiOiInLCciJykNCgkJZXhwaXJ5ICAgID0gZGF0ZXRpbWUuZGF0ZXRpbWUuZnJvbXRpbWVzdGFtcChpbnQoZXhwaXJ5KSkuc3RyZnRpbWUoJyVkLyVtLyVZIC0gJUg6JU0nKQ0KCQl0b29scy5hZGREaXIoJ1tDT0xPUiBibHVlXVVzZXJuYW1lIDpbL0NPTE9SXSAnK3VzZXJuYW1lLCcnLCcnLGljb24sZmFuYXJ0LCcnKQ0KCQl0b29scy5hZGREaXIoJ1tDT0xPUiBibHVlXVBhc3N3b3JkIDpbL0NPTE9SXSAnK3Bhc3N3b3JkLCcnLCcnLGljb24sZmFuYXJ0LCcnKQ0KCQl0b29scy5hZGREaXIoJ1tDT0xPUiBibHVlXUV4cGlyeSBEYXRlOlsvQ09MT1JdICcrZXhwaXJ5LCcnLCcnLGljb24sZmFuYXJ0LCcnKQ0KCQl0b29scy5hZGREaXIoJ1tDT0xPUiBibHVlXUFjY291bnQgU3RhdHVzIDpbL0NPTE9SXSAlcyclc3RhdHVzLCcnLCcnLGljb24sZmFuYXJ0LCcnKQ0KCQl0b29scy5hZGREaXIoJ1tDT0xPUiBibHVlXUFsbG93ZWQgQ29ubmVjdGlvbnM6Wy9DT0xPUl0gJytjb25uZWN0cywnJywnJyxpY29uLGZhbmFydCwnJykNCglleGNlcHQ6cGFzcw0KCQkNCgkNCmRlZiBjb3JyZWN0UFZSKCk6DQoNCglhZGRvbiA9IHhibWNhZGRvbi5BZGRvbigncGx1Z2luLnZpZGVvLk1lZGlhSHViSVBUVicpDQoJdXNlcm5hbWVfdGV4dCA9IGFkZG9uLmdldFNldHRpbmcoaWQ9J1VzZXJuYW1lJykNCglwYXNzd29yZF90ZXh0ID0gYWRkb24uZ2V0U2V0dGluZyhpZD0nUGFzc3dvcmQnKQ0KCWpzb25TZXRQVlIgPSAneyJqc29ucnBjIjoiMi4wIiwgIm1ldGhvZCI6IlNldHRpbmdzLlNldFNldHRpbmdWYWx1ZSIsICJwYXJhbXMiOnsic2V0dGluZyI6InB2cm1hbmFnZXIuZW5hYmxlZCIsICJ2YWx1ZSI6dHJ1ZX0sImlkIjoxfScNCglJUFRWb24gCSAgID0gJ3sianNvbnJwYyI6IjIuMCIsIm1ldGhvZCI6IkFkZG9ucy5TZXRBZGRvbkVuYWJsZWQiLCJwYXJhbXMiOnsiYWRkb25pZCI6InB2ci5pcHR2c2ltcGxlIiwiZW5hYmxlZCI6dHJ1ZX0sImlkIjoxfScNCgludWxsZGVtbyAgID0gJ3sianNvbnJwYyI6IjIuMCIsIm1ldGhvZCI6IkFkZG9ucy5TZXRBZGRvbkVuYWJsZWQiLCJwYXJhbXMiOnsiYWRkb25pZCI6InB2ci5kZW1vIiwiZW5hYmxlZCI6ZmFsc2V9LCJpZCI6MX0nDQoJbG9naW51cmwgICA9ICJodHRwOi8vbWVkaWFodWJpcHR2LmRkbnMubmV0OjQ1NDUvZ2V0LnBocD91c2VybmFtZT0iICsgdXNlcm5hbWVfdGV4dCArICImcGFzc3dvcmQ9IiArIHBhc3N3b3JkX3RleHQgKyAiJnR5cGU9bTN1X3BsdXMmb3V0cHV0PXRzIg0KCUVQR3VybCAgICAgPSAiaHR0cDovL21lZGlhaHViaXB0di5kZG5zLm5ldDo0NTQ1L3htbHR2LnBocD91c2VybmFtZT0iICsgdXNlcm5hbWVfdGV4dCArICImcGFzc3dvcmQ9IiArIHBhc3N3b3JkX3RleHQgKyAiJnR5cGU9bTN1X3BsdXMmb3V0cHV0PXRzIg0KDQoJeGJtYy5leGVjdXRlSlNPTlJQQyhqc29uU2V0UFZSKQ0KCXhibWMuZXhlY3V0ZUpTT05SUEMoSVBUVm9uKQ0KCXhibWMuZXhlY3V0ZUpTT05SUEMobnVsbGRlbW8pDQoJDQoJbW9pc3QgPSB4Ym1jYWRkb24uQWRkb24oJ3B2ci5pcHR2c2ltcGxlJykNCgltb2lzdC5zZXRTZXR0aW5nKGlkPSdtM3VVcmwnLCB2YWx1ZT1sb2dpbnVybCkNCgltb2lzdC5zZXRTZXR0aW5nKGlkPSdlcGdVcmwnLCB2YWx1ZT1FUEd1cmwpDQoJbW9pc3Quc2V0U2V0dGluZyhpZD0nbTN1Q2FjaGUnLCB2YWx1ZT0iZmFsc2UiKQ0KCW1vaXN0LnNldFNldHRpbmcoaWQ9J2VwZ0NhY2hlJywgdmFsdWU9ImZhbHNlIikNCgl4Ym1jLmV4ZWN1dGVidWlsdGluKCJDb250YWluZXIuUmVmcmVzaCIpDQoJDQoJDQpkZWYgZ3JhYigpOg0KCWhlbGxvID0gJ2hlbGxvJw0KCXJldHVybiBoZWxsbw0KCQkNCnBhcmFtcz10b29scy5nZXRfcGFyYW1zKCkNCnVybD1Ob25lDQpuYW1lPU5vbmUNCm1vZGU9Tm9uZQ0KaWNvbmltYWdlPU5vbmUNCmRlc2NyaXB0aW9uPU5vbmUNCnF1ZXJ5PU5vbmUNCnR5cGU9Tm9uZQ0KDQp0cnk6DQoJdXJsPXVybGxpYi51bnF1b3RlX3BsdXMocGFyYW1zWyJ1cmwiXSkNCmV4Y2VwdDoNCglwYXNzDQp0cnk6DQoJbmFtZT11cmxsaWIudW5xdW90ZV9wbHVzKHBhcmFtc1sibmFtZSJdKQ0KZXhjZXB0Og0KCXBhc3MNCnRyeToNCglpY29uaW1hZ2U9dXJsbGliLnVucXVvdGVfcGx1cyhwYXJhbXNbImljb25pbWFnZSJdKQ0KZXhjZXB0Og0KCXBhc3MNCnRyeToNCgltb2RlPWludChwYXJhbXNbIm1vZGUiXSkNCmV4Y2VwdDoNCglwYXNzDQp0cnk6DQoJZGVzY3JpcHRpb249dXJsbGliLnVucXVvdGVfcGx1cyhwYXJhbXNbImRlc2NyaXB0aW9uIl0pDQpleGNlcHQ6DQoJcGFzcw0KdHJ5Og0KCXF1ZXJ5PXVybGxpYi51bnF1b3RlX3BsdXMocGFyYW1zWyJxdWVyeSJdKQ0KZXhjZXB0Og0KCXBhc3MNCnRyeToNCgl0eXBlPXVybGxpYi51bnF1b3RlX3BsdXMocGFyYW1zWyJ0eXBlIl0pDQpleGNlcHQ6DQoJcGFzcw0KDQppZiBtb2RlPT1Ob25lIG9yIHVybD09Tm9uZSBvciBsZW4odXJsKTwxOg0KCXN0YXJ0KCkNCg0KZWxpZiBtb2RlPT0xOg0KCWxpdmVjYXRlZ29yeSh1cmwpDQoJDQplbGlmIG1vZGU9PTI6DQoJTGl2ZWxpc3QodXJsKQ0KCQ0KZWxpZiBtb2RlPT0zOg0KCXZvZCh1cmwpDQoJDQplbGlmIG1vZGU9PTQ6DQoJc3RyZWFtX3ZpZGVvKHVybCkNCgkNCmVsaWYgbW9kZT09NToNCglzZWFyY2goKQ0KCQ0KZWxpZiBtb2RlPT02Og0KCWFjY291bnRpbmZvKCkNCgkNCmVsaWYgbW9kZT09NzoNCgl4Ym1jLmV4ZWN1dGVidWlsdGluKCdBY3RpdmF0ZVdpbmRvdyhUVkd1aWRlKScpDQoJDQplbGlmIG1vZGU9PTg6DQoJc2V0dGluZ3NtZW51KCkNCgkNCmVsaWYgbW9kZT09OToNCgl4Ym1jLmV4ZWN1dGVidWlsdGluKCdBY3RpdmF0ZVdpbmRvdyhidXN5ZGlhbG9nKScpDQoJdG9vbHMuVHJhaWxlcigpLnBsYXkodXJsKSANCgl4Ym1jLmV4ZWN1dGVidWlsdGluKCdEaWFsb2cuQ2xvc2UoYnVzeWRpYWxvZyknKQ0KCQ0KZWxpZiBtb2RlPT0xMDoNCglhZGRvbnNldHRpbmdzKHVybCxkZXNjcmlwdGlvbikNCgkNCmVsaWYgbW9kZT09MTE6DQoJcHZyc2V0dXAoKQ0KDQoNCg0KeGJtY3BsdWdpbi5lbmRPZkRpcmVjdG9yeShpbnQoc3lzLmFyZ3ZbMV0pKQ=='))